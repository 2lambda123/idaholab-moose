{#- Required jinja arguments                                                                  -#}
{#- APPTAINER_BOOTSTRAP: The BootStrap to use (typically localimage or oras)                  -#}
{#- APPTAINER_FROM: The From to use (path to an image or an oras URI)                         -#}
{#- MOOSE_DIR: Path on the host to the MOOSE repository                                       -#}

{#- Optional jinja arguments                                                                  -#}
{#- PETSC_ALT: Set to anything to use the alternate version of PETSc                          -#}
{#- PETSC_OPTIONS: Options to pass to the PETSc build script                                  -#}
{#- MOOSE_JOBS: Number of jobs to pass to the PETSc build script                              -#}
{#- MPI_FLAVOUR: The flavour of MPI to use (options: mpich, openmpi; default: mpich)          -#}

{#- The within-container build directory to use                                               -#}
{%- set ROOT_BUILD_DIR = '/root/build' -%}

{#- The installation location for PETSc                                                       -#}
{%- set PETSC_DIR = '/opt/petsc' -%}

{%- if MPI_FLAVOUR is not defined %}
{%- set MPI_FLAVOUR = 'mpich' -%}
{%- endif %}

{%- if PETSC_ALT is defined %}
{%- set PETSC_BUILD_SCRIPT = 'update_and_rebuild_petsc_alt.sh' -%}
{%- else -%}
{%- set PETSC_BUILD_SCRIPT = 'update_and_rebuild_petsc.sh' -%}
{%- endif %}

BootStrap: {{ APPTAINER_BOOTSTRAP }}
From: {{ APPTAINER_FROM }}

%environment
    # Set the MPI environment
{%- if MPI_FLAVOUR == "mpich" %}
    source /opt/mpi/use-mpich
{%- elif MPI_FLAVOUR == "openmpi" %}
    source /opt/mpi/use-openmpi
{%- endif %}

    # From moose-petsc
    export PETSC_DIR={{ PETSC_DIR }}

%post
    # Set the MPI environment
{%- if MPI_FLAVOUR == "mpich" %}
    source /opt/mpi/use-mpich
{%- elif MPI_FLAVOUR == "openmpi" %}
    source /opt/mpi/use-openmpi
{%- endif %}

    # Load jinja vars
    ROOT_BUILD_DIR={{ ROOT_BUILD_DIR }}
    PETSC_DIR={{ PETSC_DIR }}
    PETSC_BUILD_SCRIPT={{ PETSC_BUILD_SCRIPT }}
    PETSC_OPTIONS="{{ PETSC_OPTIONS }}"

    # Make sure PETSc exists
    if [ -n `${ROOT_BUILD_DIR}/petsc -d 0 -type d -empty` ]; then
        echo "The petsc directory is empty; you must initialize the submodule"
        exit 1
    fi

    # Don't bother with submodule changes
    PETSC_OPTIONS+=" --skip-submodule-update"
{%- if PETSC_ALT is not defined %}
    # Need a newer cmake for current petsc
    PETSC_OPTIONS+=" --download-cmake"
{%- endif %}

    # Build PETSc
    umask 022
    cd ${ROOT_BUILD_DIR}
    MOOSE_JOBS={{ MOOSE_JOBS }} PETSC_PREFIX=${PETSC_DIR} scripts/${PETSC_BUILD_SCRIPT} ${PETSC_OPTIONS}

{%- if MPI_FLAVOUR != "openmpi" %}
    # Test PETSc
    cd petsc
    make SLEPC_DIR=${PETSC_DIR} PETSC_DIR=${PETSC_DIR} PETSC_ARCH= check
{%- endif %}

    # Fix possibly bad permissions
    chmod -R o=u-w,g=u-w ${PETSC_DIR}

    # Clean Up
    rm -rf ${ROOT_BUILD_DIR}

%files
    {{ MOOSE_DIR }}/petsc {{ ROOT_BUILD_DIR }}/petsc
    {{ MOOSE_DIR }}/scripts/{{ PETSC_BUILD_SCRIPT }} {{ ROOT_BUILD_DIR }}/scripts/{{ PETSC_BUILD_SCRIPT }}
    {{ MOOSE_DIR }}/scripts/configure_petsc.sh {{ ROOT_BUILD_DIR }}/scripts/configure_petsc.sh
