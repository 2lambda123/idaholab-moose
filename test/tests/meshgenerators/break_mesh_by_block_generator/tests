[Tests]
  [break_mesh_by_blocks_generator]
    requirement = 'MOOSE shall be able to create separate blocks in a mesh'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#11640'

    [3d_auto_test]
      type = 'Exodiff'
      input = 'break_mesh_3D_auto.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_3D_auto_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "without a split interface in 3D;"
    []

    [3d_split_test]
      type = 'Exodiff'
      input = 'break_mesh_3D_splittrue.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_3D_splittrue_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a split interface in 3D;"
    []

    [3d_polycrystal_test]
      type = 'Exodiff'
      input = 'break_mesh_3D_polycrystal.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_3D_polycrystal_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a polycrystal based mesh in 3D;"
    []

    [2d_auto_test]
      type = 'Exodiff'
      input = 'break_mesh_2DJunction_auto.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_2DJunction_auto_in.e'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = "without a split interface in 2D;"
    []

    [2d_splittrue_test]
      type = 'Exodiff'
      input = 'break_mesh_2DJunction_splittrue.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_2DJunction_splittrue_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a split interface in 2D; and"
    []

    [polycrystal_test]
      type = 'Exodiff'
      input = 'break_mesh_2DJunction_polycrystal.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_2DJunction_polycrystal_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a polycrystal based mesh in 2D."
    []
  []

  [block_restricted]
    requirement = 'The system shall be able to break the mesh between listed blocks:'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#15895'

    [split_transition_only]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/split_interface=false Mesh/split/split_transition_interface=true '
                 '--mesh-only block_restricted_split_transition_only_in.e'
      exodiff = 'block_restricted_split_transition_only_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'without splitting the interface and with splitting the transition interface;'
    []

    [split_interface_only]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/split_interface=true --mesh-only '
                 'block_restricted_split_interface_only_in.e'
      exodiff = 'block_restricted_split_interface_only_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'with a split interface and without splitting the transition interface;'
    []

    [split_all]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/split_interface=true Mesh/split/split_transition_interface=true '
                 '--mesh-only block_restricted_split_all_in.e'
      exodiff = 'block_restricted_split_all_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'with a split interface and splitting the transition interface;'
    []

    [no_transition]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/add_transition_interface=false --mesh-only '
                 'block_restricted_no_transition_in.e'
      exodiff = 'block_restricted_no_transition_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'with a split interface, without splitting the transition interface, and without a '
               'transition interface;'

    []

    [transition_split]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/add_transition_interface=false Mesh/split/split_interface=true '
                 '--mesh-only block_restricted_no_transition_split_in.e'
      exodiff = 'block_restricted_no_transition_split_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'without a split interface, splitting the transition interface, or a transition '
               'interface;'
    []
  []

  [restart_generate_initial_mesh]
      type = 'RunApp'
      input = 'restart_create_initial_mesh.i'
      cli_args = '--mesh-only'
      expect_out = 'Writing Exodus'
      # this generate teh exodus
  []
  [restart_split_initial_mesh]
      prereq = 'restart_generate_initial_mesh'
      type = 'RunApp'
      input = 'restart_split_initial_mesh.i'
      cli_args = '--split-mesh 2 --split-file BMBB_restart.cpa'
      expect_out = 'Splitting 2 ways...'
      # use teh previous exodus as input, break teh mesh with BMBB, and plit it two ways
  []
  [restart_use_the_split_mesh]
      prereq = 'restart_split_initial_mesh'
      type = 'RunApp'
      input = 'restart_use_split_mesh.i'
      cli_args = '--distributed-mesh'
      min_parallel = 2
      max_parallel = 2
      # load the split mesh with FileMeshGenerator
  []

[]
