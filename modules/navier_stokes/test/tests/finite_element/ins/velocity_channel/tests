[Tests]
  [velocity_inletBC]
    issues = '#3036'
    design = 'cgfe.md'
    requirement = 'The system shall be able to solve for incompressible fluid flowing through a 2D channel with only inlet velocity boundary conditions'
    [no_parts]
      type = 'Exodiff'
      input = 'velocity_inletBC_no_parts.i'
      exodiff = 'velocity_inletBC_no_parts_out.e'
      custom_cmp = velocity_inletBC_no_parts_out.cmp
      detail = 'with the regular volumetric integration of the momentum pressure term'
    []
    [by_parts]
      type = 'Exodiff'
      input = 'velocity_inletBC_by_parts.i'
      exodiff = 'velocity_inletBC_by_parts_out.e'
      custom_cmp = velocity_inletBC_by_parts_out.cmp
      detail = 'and with the momentum pressure term integrated by parts.'
    []
  []
  [supg_traction_form]
    issues = '#25307'
    design = 'cgfe.md'
    requirement = 'The system shall be able to solve for incompressible fluid flowing through a 2D channel with only inlet velocity boundary conditions with streamline upwind Petrov Galerkin stabilization and a traction form for the viscous term'
    [hand_coded]
      type = Exodiff
      input = traction-supg.i
      exodiff = traction-supg_out.e
      detail = 'using a hand-coded Jacobian, and'
    []
    [ad]
      type = Exodiff
      input = ad-traction-supg.i
      exodiff = ad-traction-supg_out.e
      detail = 'using an automatic differentiation computed Jacobian and compute identical results, indicating the traction implementations with second order derivatives for the viscous term in the stabilization term are identical.'
    []
  []
  [conservative]
    requirement = 'The system shall be able to solve a channel flow problem with a symmetry boundary condition using Taylor-Hood finite elements in which the mass and momentum advection terms are integrated by parts'
    [augmented_navier_stokes]
      type = Exodiff
      input = conservative-velocity-channel-with-symm-bc.i
      exodiff = conservative-velocity-channel-with-symm-bc_out.e
      detail = 'using augmented Navier-Stokes equations with the pressure mass matrix preconditioning the Schur complement'
    []
    [augmented_stokes]
      type = Exodiff
      input = conservative-velocity-channel-with-symm-bc-stokes.i
      exodiff = conservative-velocity-channel-with-symm-bc-stokes_out.e
      detail = 'using augmented Stokes equations with the pressure mass matrix preconditioning the Schur complement'
    []
    [hpddm]
      type = Exodiff
      input = conservative-velocity-channel-hpddm.i
      exodiff = conservative-velocity-channel-hpddm_out.e
      detail = 'using Navier-Stokes equations with a field split high performance domain decomposition preconditioner.'
      min_parallel = 2
      cli_args = '-options_file harmonic.rc'
    []
  []
[]
