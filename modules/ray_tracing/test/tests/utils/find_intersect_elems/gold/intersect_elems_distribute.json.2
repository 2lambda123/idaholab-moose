{
    "number_of_parts": 3,
    "part": 2,
    "reporters": {
        "find_intersection_elems": {
            "type": "IntersectionElemsReporter",
            "values": {
                "from_overlay": {
                    "type": "std::map<unsigned long long, std::set<unsigned long long, std::less<unsigned long long>, std::allocator<unsigned long long>>, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, std::set<unsigned long long, std::less<unsigned long long>, std::allocator<unsigned long long>>>>>"
                },
                "to_overlay": {
                    "type": "std::map<unsigned long long, std::set<unsigned long long, std::less<unsigned long long>, std::allocator<unsigned long long>>, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, std::set<unsigned long long, std::less<unsigned long long>, std::allocator<unsigned long long>>>>>"
                }
            }
        }
    },
    "time_steps": [
        {
            "find_intersection_elems": {
                "from_overlay": [
                    [
                        6,
                        [
                            2,
                            24,
                            25,
                            26,
                            29,
                            33
                        ]
                    ],
                    [
                        7,
                        [
                            26,
                            29,
                            33
                        ]
                    ],
                    [
                        8,
                        [
                            29,
                            33,
                            34,
                            35
                        ]
                    ]
                ],
                "to_overlay": [
                    [
                        24,
                        [
                            6
                        ]
                    ],
                    [
                        25,
                        [
                            6
                        ]
                    ],
                    [
                        26,
                        [
                            6,
                            7
                        ]
                    ],
                    [
                        29,
                        [
                            3,
                            6,
                            7,
                            8
                        ]
                    ],
                    [
                        33,
                        [
                            3,
                            6,
                            7,
                            8
                        ]
                    ],
                    [
                        34,
                        [
                            3,
                            5,
                            8
                        ]
                    ],
                    [
                        35,
                        [
                            3,
                            4,
                            5,
                            8
                        ]
                    ],
                    [
                        60,
                        [
                            0
                        ]
                    ],
                    [
                        61,
                        [
                            0
                        ]
                    ],
                    [
                        62,
                        [
                            0
                        ]
                    ],
                    [
                        65,
                        [
                            0,
                            1
                        ]
                    ],
                    [
                        69,
                        [
                            0,
                            1
                        ]
                    ],
                    [
                        70,
                        [
                            1
                        ]
                    ],
                    [
                        71,
                        [
                            1,
                            2
                        ]
                    ]
                ]
            },
            "time": 2.0,
            "time_step": 2
        }
    ]
}
